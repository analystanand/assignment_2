class HelloThread$TestThread extends java.lang.Thread
{
    int y;

    void <init>()
    {
        HelloThread$TestThread r0;

        r0 := @this: HelloThread$TestThread;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        HelloThread$TestThread r0;
        int $i0, $i1;

        r0 := @this: HelloThread$TestThread;

        staticinvoke <Log: void logFieldAcc(java.lang.Object,java.lang.String,boolean,boolean)>("[HelloThread, java.lang.Object, java.lang.String, java.lang.CloneNotSupportedException, java.lang.InterruptedException, java.lang.Throwable, java.lang.Class, java.io.Serializable, java.lang.Comparable, java.lang.CharSequence, java.io.UnsupportedEncodingException, java.lang.reflect.GenericDeclaration, java.lang.reflect.Type, java.lang.reflect.AnnotatedElement, java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.SecurityException, java.lang.NoSuchFieldException, java.lang.NoSuchMethodException, java.lang.Exception, java.io.IOException, java.io.PrintStream, java.lang.System, HelloThread$TestThread, java.io.FilterOutputStream, java.lang.Appendable, java.io.Closeable, java.io.FileNotFoundException, java.util.Formatter, java.io.BufferedWriter, java.io.OutputStreamWriter, java.nio.charset.Charset, java.io.OutputStream, java.io.File, java.util.Locale, java.io.InputStream, java.lang.SecurityManager, java.io.Console, java.util.Properties, java.nio.channels.Channel, java.util.Map, java.io.FileOutputStream, java.io.ObjectStreamField, java.util.Comparator, java.lang.StringBuffer, java.lang.StringBuilder, java.lang.AbstractStringBuilder, java.lang.Iterable, java.lang.Thread, java.lang.AutoCloseable, java.util.stream.IntStream, java.util.Spliterator$OfInt, java.lang.Runnable, java.lang.ThreadGroup, java.lang.ClassLoader, java.security.AccessControlContext, java.lang.ThreadLocal$ThreadLocalMap, sun.nio.ch.Interruptible, java.lang.StackTraceElement, java.lang.RuntimePermission, java.lang.Thread$UncaughtExceptionHandler, java.lang.Thread$State, java.lang.ref.ReferenceQueue, java.util.concurrent.ConcurrentMap, java.io.Flushable, java.io.Writer, java.net.MalformedURLException, java.lang.Cloneable, java.util.MissingResourceException, java.io.ObjectStreamException, java.util.Hashtable, java.util.InvalidPropertiesFormatException, java.util.stream.BaseStream, java.util.Spliterator$OfPrimitive, java.lang.ClassFormatError, java.lang.IllegalArgumentException, java.security.AccessControlException, java.security.BasicPermission, java.lang.Enum, java.util.Dictionary, java.io.StreamCorruptedException, java.util.Spliterator, java.security.Permission, java.security.Guard, Log, java.io.ObjectOutputStream, java.io.ObjectInputStream, java.io.ObjectOutput, java.io.ObjectStreamConstants, java.io.ObjectInput, java.io.NotActiveException, java.io.InvalidObjectException, java.io.InvalidClassException, java.lang.ReflectiveOperationException, java.io.DataOutput, java.io.DataInput, java.util.List, java.lang.Throwable$PrintStreamOrWriter, java.util.Set, java.io.PrintWriter, java.util.Collection, java.lang.Void, java.lang.Float, java.lang.Number, java.lang.NumberFormatException, java.lang.RuntimeException, java.lang.Double, java.lang.AssertionError, java.lang.Error, java.lang.Integer, java.lang.NullPointerException, java.lang.Character, java.lang.Long, java.math.BigInteger, java.lang.Short, java.lang.Boolean, java.lang.reflect.Constructor, java.security.ProtectionDomain, java.lang.ref.SoftReference, sun.reflect.generics.repository.ClassRepository, sun.reflect.ReflectionFactory, java.lang.Class$AnnotationData, sun.reflect.annotation.AnnotationType, java.lang.ClassValue$ClassValueMap, java.lang.reflect.TypeVariable, java.lang.Package, java.lang.reflect.Method, java.lang.Class$EnclosingMethodInfo, java.lang.reflect.Field, java.net.URL, java.lang.Class$ReflectionData, sun.reflect.generics.factory.GenericsFactory, java.lang.reflect.Executable, sun.reflect.ConstantPool, java.lang.Class$MethodArray, java.lang.annotation.Annotation, java.lang.reflect.AnnotatedType, java.lang.reflect.InvocationTargetException, java.lang.ref.Reference, sun.reflect.generics.repository.GenericDeclRepository, java.util.WeakHashMap, java.lang.reflect.AccessibleObject, java.lang.reflect.Member, java.net.URISyntaxException, sun.reflect.generics.repository.AbstractRepository, java.util.AbstractMap, java.lang.Byte, java.lang.NoClassDefFoundError, java.lang.LinkageError, java.lang.IndexOutOfBoundsException, java.lang.StackOverflowError, java.lang.VirtualMachineError, java.lang.invoke.LambdaMetafactory, java.lang.invoke.LambdaConversionException, java.lang.AbstractMethodError, java.lang.IncompatibleClassChangeError, java.lang.ClassCastException, java.lang.VerifyError, java.lang.NoSuchFieldError, java.lang.IllegalMonitorStateException, java.lang.UnknownError, java.lang.InternalError, java.lang.ArithmeticException, java.lang.NegativeArraySizeException, java.lang.ClassCircularityError, java.lang.ref.Finalizer, java.lang.ref.FinalReference, java.lang.NoSuchMethodError, java.lang.ArrayIndexOutOfBoundsException, java.lang.ThreadDeath, java.lang.InstantiationError, java.lang.IllegalAccessError, java.lang.UnsatisfiedLinkError, java.lang.ArrayStoreException, java.lang.ExceptionInInitializerError, java.lang.OutOfMemoryError]", "<HelloThread: int x>", true, true);

        <HelloThread: int x> = 0;

        staticinvoke <Log: void logFieldAcc(java.lang.Object,java.lang.String,boolean,boolean)>("[HelloThread, java.lang.Object, java.lang.String, java.lang.CloneNotSupportedException, java.lang.InterruptedException, java.lang.Throwable, java.lang.Class, java.io.Serializable, java.lang.Comparable, java.lang.CharSequence, java.io.UnsupportedEncodingException, java.lang.reflect.GenericDeclaration, java.lang.reflect.Type, java.lang.reflect.AnnotatedElement, java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.SecurityException, java.lang.NoSuchFieldException, java.lang.NoSuchMethodException, java.lang.Exception, java.io.IOException, java.io.PrintStream, java.lang.System, HelloThread$TestThread, java.io.FilterOutputStream, java.lang.Appendable, java.io.Closeable, java.io.FileNotFoundException, java.util.Formatter, java.io.BufferedWriter, java.io.OutputStreamWriter, java.nio.charset.Charset, java.io.OutputStream, java.io.File, java.util.Locale, java.io.InputStream, java.lang.SecurityManager, java.io.Console, java.util.Properties, java.nio.channels.Channel, java.util.Map, java.io.FileOutputStream, java.io.ObjectStreamField, java.util.Comparator, java.lang.StringBuffer, java.lang.StringBuilder, java.lang.AbstractStringBuilder, java.lang.Iterable, java.lang.Thread, java.lang.AutoCloseable, java.util.stream.IntStream, java.util.Spliterator$OfInt, java.lang.Runnable, java.lang.ThreadGroup, java.lang.ClassLoader, java.security.AccessControlContext, java.lang.ThreadLocal$ThreadLocalMap, sun.nio.ch.Interruptible, java.lang.StackTraceElement, java.lang.RuntimePermission, java.lang.Thread$UncaughtExceptionHandler, java.lang.Thread$State, java.lang.ref.ReferenceQueue, java.util.concurrent.ConcurrentMap, java.io.Flushable, java.io.Writer, java.net.MalformedURLException, java.lang.Cloneable, java.util.MissingResourceException, java.io.ObjectStreamException, java.util.Hashtable, java.util.InvalidPropertiesFormatException, java.util.stream.BaseStream, java.util.Spliterator$OfPrimitive, java.lang.ClassFormatError, java.lang.IllegalArgumentException, java.security.AccessControlException, java.security.BasicPermission, java.lang.Enum, java.util.Dictionary, java.io.StreamCorruptedException, java.util.Spliterator, java.security.Permission, java.security.Guard, Log, java.io.ObjectOutputStream, java.io.ObjectInputStream, java.io.ObjectOutput, java.io.ObjectStreamConstants, java.io.ObjectInput, java.io.NotActiveException, java.io.InvalidObjectException, java.io.InvalidClassException, java.lang.ReflectiveOperationException, java.io.DataOutput, java.io.DataInput, java.util.List, java.lang.Throwable$PrintStreamOrWriter, java.util.Set, java.io.PrintWriter, java.util.Collection, java.lang.Void, java.lang.Float, java.lang.Number, java.lang.NumberFormatException, java.lang.RuntimeException, java.lang.Double, java.lang.AssertionError, java.lang.Error, java.lang.Integer, java.lang.NullPointerException, java.lang.Character, java.lang.Long, java.math.BigInteger, java.lang.Short, java.lang.Boolean, java.lang.reflect.Constructor, java.security.ProtectionDomain, java.lang.ref.SoftReference, sun.reflect.generics.repository.ClassRepository, sun.reflect.ReflectionFactory, java.lang.Class$AnnotationData, sun.reflect.annotation.AnnotationType, java.lang.ClassValue$ClassValueMap, java.lang.reflect.TypeVariable, java.lang.Package, java.lang.reflect.Method, java.lang.Class$EnclosingMethodInfo, java.lang.reflect.Field, java.net.URL, java.lang.Class$ReflectionData, sun.reflect.generics.factory.GenericsFactory, java.lang.reflect.Executable, sun.reflect.ConstantPool, java.lang.Class$MethodArray, java.lang.annotation.Annotation, java.lang.reflect.AnnotatedType, java.lang.reflect.InvocationTargetException, java.lang.ref.Reference, sun.reflect.generics.repository.GenericDeclRepository, java.util.WeakHashMap, java.lang.reflect.AccessibleObject, java.lang.reflect.Member, java.net.URISyntaxException, sun.reflect.generics.repository.AbstractRepository, java.util.AbstractMap, java.lang.Byte, java.lang.NoClassDefFoundError, java.lang.LinkageError, java.lang.IndexOutOfBoundsException, java.lang.StackOverflowError, java.lang.VirtualMachineError, java.lang.invoke.LambdaMetafactory, java.lang.invoke.LambdaConversionException, java.lang.AbstractMethodError, java.lang.IncompatibleClassChangeError, java.lang.ClassCastException, java.lang.VerifyError, java.lang.NoSuchFieldError, java.lang.IllegalMonitorStateException, java.lang.UnknownError, java.lang.InternalError, java.lang.ArithmeticException, java.lang.NegativeArraySizeException, java.lang.ClassCircularityError, java.lang.ref.Finalizer, java.lang.ref.FinalReference, java.lang.NoSuchMethodError, java.lang.ArrayIndexOutOfBoundsException, java.lang.ThreadDeath, java.lang.InstantiationError, java.lang.IllegalAccessError, java.lang.UnsatisfiedLinkError, java.lang.ArrayStoreException, java.lang.ExceptionInInitializerError, java.lang.OutOfMemoryError]", "<HelloThread$TestThread: int y>", false, false);

        $i0 = r0.<HelloThread$TestThread: int y>;

        $i1 = $i0 + 1;

        staticinvoke <Log: void logFieldAcc(java.lang.Object,java.lang.String,boolean,boolean)>("[HelloThread, java.lang.Object, java.lang.String, java.lang.CloneNotSupportedException, java.lang.InterruptedException, java.lang.Throwable, java.lang.Class, java.io.Serializable, java.lang.Comparable, java.lang.CharSequence, java.io.UnsupportedEncodingException, java.lang.reflect.GenericDeclaration, java.lang.reflect.Type, java.lang.reflect.AnnotatedElement, java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.SecurityException, java.lang.NoSuchFieldException, java.lang.NoSuchMethodException, java.lang.Exception, java.io.IOException, java.io.PrintStream, java.lang.System, HelloThread$TestThread, java.io.FilterOutputStream, java.lang.Appendable, java.io.Closeable, java.io.FileNotFoundException, java.util.Formatter, java.io.BufferedWriter, java.io.OutputStreamWriter, java.nio.charset.Charset, java.io.OutputStream, java.io.File, java.util.Locale, java.io.InputStream, java.lang.SecurityManager, java.io.Console, java.util.Properties, java.nio.channels.Channel, java.util.Map, java.io.FileOutputStream, java.io.ObjectStreamField, java.util.Comparator, java.lang.StringBuffer, java.lang.StringBuilder, java.lang.AbstractStringBuilder, java.lang.Iterable, java.lang.Thread, java.lang.AutoCloseable, java.util.stream.IntStream, java.util.Spliterator$OfInt, java.lang.Runnable, java.lang.ThreadGroup, java.lang.ClassLoader, java.security.AccessControlContext, java.lang.ThreadLocal$ThreadLocalMap, sun.nio.ch.Interruptible, java.lang.StackTraceElement, java.lang.RuntimePermission, java.lang.Thread$UncaughtExceptionHandler, java.lang.Thread$State, java.lang.ref.ReferenceQueue, java.util.concurrent.ConcurrentMap, java.io.Flushable, java.io.Writer, java.net.MalformedURLException, java.lang.Cloneable, java.util.MissingResourceException, java.io.ObjectStreamException, java.util.Hashtable, java.util.InvalidPropertiesFormatException, java.util.stream.BaseStream, java.util.Spliterator$OfPrimitive, java.lang.ClassFormatError, java.lang.IllegalArgumentException, java.security.AccessControlException, java.security.BasicPermission, java.lang.Enum, java.util.Dictionary, java.io.StreamCorruptedException, java.util.Spliterator, java.security.Permission, java.security.Guard, Log, java.io.ObjectOutputStream, java.io.ObjectInputStream, java.io.ObjectOutput, java.io.ObjectStreamConstants, java.io.ObjectInput, java.io.NotActiveException, java.io.InvalidObjectException, java.io.InvalidClassException, java.lang.ReflectiveOperationException, java.io.DataOutput, java.io.DataInput, java.util.List, java.lang.Throwable$PrintStreamOrWriter, java.util.Set, java.io.PrintWriter, java.util.Collection, java.lang.Void, java.lang.Float, java.lang.Number, java.lang.NumberFormatException, java.lang.RuntimeException, java.lang.Double, java.lang.AssertionError, java.lang.Error, java.lang.Integer, java.lang.NullPointerException, java.lang.Character, java.lang.Long, java.math.BigInteger, java.lang.Short, java.lang.Boolean, java.lang.reflect.Constructor, java.security.ProtectionDomain, java.lang.ref.SoftReference, sun.reflect.generics.repository.ClassRepository, sun.reflect.ReflectionFactory, java.lang.Class$AnnotationData, sun.reflect.annotation.AnnotationType, java.lang.ClassValue$ClassValueMap, java.lang.reflect.TypeVariable, java.lang.Package, java.lang.reflect.Method, java.lang.Class$EnclosingMethodInfo, java.lang.reflect.Field, java.net.URL, java.lang.Class$ReflectionData, sun.reflect.generics.factory.GenericsFactory, java.lang.reflect.Executable, sun.reflect.ConstantPool, java.lang.Class$MethodArray, java.lang.annotation.Annotation, java.lang.reflect.AnnotatedType, java.lang.reflect.InvocationTargetException, java.lang.ref.Reference, sun.reflect.generics.repository.GenericDeclRepository, java.util.WeakHashMap, java.lang.reflect.AccessibleObject, java.lang.reflect.Member, java.net.URISyntaxException, sun.reflect.generics.repository.AbstractRepository, java.util.AbstractMap, java.lang.Byte, java.lang.NoClassDefFoundError, java.lang.LinkageError, java.lang.IndexOutOfBoundsException, java.lang.StackOverflowError, java.lang.VirtualMachineError, java.lang.invoke.LambdaMetafactory, java.lang.invoke.LambdaConversionException, java.lang.AbstractMethodError, java.lang.IncompatibleClassChangeError, java.lang.ClassCastException, java.lang.VerifyError, java.lang.NoSuchFieldError, java.lang.IllegalMonitorStateException, java.lang.UnknownError, java.lang.InternalError, java.lang.ArithmeticException, java.lang.NegativeArraySizeException, java.lang.ClassCircularityError, java.lang.ref.Finalizer, java.lang.ref.FinalReference, java.lang.NoSuchMethodError, java.lang.ArrayIndexOutOfBoundsException, java.lang.ThreadDeath, java.lang.InstantiationError, java.lang.IllegalAccessError, java.lang.UnsatisfiedLinkError, java.lang.ArrayStoreException, java.lang.ExceptionInInitializerError, java.lang.OutOfMemoryError]", "<HelloThread$TestThread: int y>", false, false);

        r0.<HelloThread$TestThread: int y> = $i1;

        return;
    }
}
